var addSameColumnUnitTest=function(a){var b=new Criteria();b.add("CardPeer::kanji","blah");b.add("CardPeer::kanji","zzzz");dbug.log(b.getUpdateSQL(new Criteria()),b.getValues());if(b.getValues().length>1){a.failure("addSameColumnUnitTest")}else{a.success("addSameColumnUnitTest")}};var mmSave=function(d){var b,e,a,f=null;b=new Card();b.setKanji("calev");b.setMeaning("dog");compound=new Compound();compound.setKanji("caleverine");b.addCompound(compound);b.save(function(){dbug.log(b.getId());f=new Criteria();try{CardPeer.retrieveByPkIdJoinAll(b.getId(),function(h){display(h.getDbug());if(h.getCompounds().length!=1){d.failure("mmSave")}else{d.success("mmSave")}},null,["CardScore","Stack"])}catch(g){dbug.log("race condition discovered with save then immediately retrieving object via pkid");d.failure("mmSave")}},function(g){d.failure("mmSave");dbug.log("mmSave - database error: "+g)})};var nmSave=function(d){var b,e,a,f=null;b=new Card();b.setKanji("calev");b.setMeaning("dog");e=new CardScore();e.setCorrect(10);e.setIncorrect(2);b.addCardScore(e);b.save(function(){dbug.log(b.getId());f=new Criteria();try{CardPeer.retrieveByPkIdJoinAll(b.getId(),function(h){display(h.getDbug());if(h.getCardScores().length!=1){d.failure("nmSave")}else{d.success("nmSave")}},null,["Compound","Stack"])}catch(g){dbug.log("race condition discovered with save then immediately retrieving object via pkid");d.failure("nmSave")}},function(g){d.failure("nmSave");dbug.log("nmSave - database error: "+g)})};var executeSQLUnitTest=function(d){var f=CardPeer.addTable(CardPeer.addSelectColumns(new Criteria()));f.setLimit(1);var a=CardPeer.addTable(CardPeer.addSelectColumns(new Criteria()));a=CardCompoundPeer.addTable(CardCompoundPeer.addSelectColumns(a));a.setLimit(1);a.addJoin("CardPeer::id","CardCompoundPeer::card_id");var e=function(){CardPeer.executeSQL(a.getSelectSQL(),a.getValues(),function(b){dbug.log("Part Two Result Set:");dbug.log(b);for(var g=0;g<b.rows.length;g++){dbug.log(b.rows.item(g))}d.success("executeSQLUnitTest")},function(){d.failure("executeSQLUnitTest")})};CardPeer.executeSQL(f.getSelectSQL(),f.getValues(),function(b){dbug.log("Part One Result Set:");dbug.log(b);for(var g=0;g<b.rows.length;g++){dbug.log(b.rows.item(g))}e()},function(){d.failure("executeSQLUnitTest")})};var hydrateUnitTest=function(a){var b=CardPeer.addTable(CardPeer.addSelectColumns(new Criteria()));b=CardCompoundPeer.addTable(CardCompoundPeer.addSelectColumns(b));b=CompoundPeer.addTable(CompoundPeer.addSelectColumns(b));b.setLimit(1);b.addJoin("CardPeer::id","CardCompoundPeer::card_id");b.addJoin("CompoundPeer::id","CardCompoundPeer::compound_id");CardPeer.executeSQL(b.getSelectSQL(),b.getValues(),function(e){dbug.log("Hydrate Result Set:");dbug.log(e.rows.item(0));e=new ResultSet(e).toArray()[0];var f=new Card();var d=new CardCompound();var g=new Compound();f.hydrate(e);d.hydrate(e);g.hydrate(e);dbug.log(f);dbug.log(d);dbug.log(g);display("oo.. Card ..oo\n"+f.getDbug());display("oo.. CardCompound ..oo\n"+d.getDbug());display("oo.. Compound ..oo\n"+g.getDbug());a.success("hydrateUnitTest")},function(){a.failure("hydrateUnitTest")})};var doSelectCardJoinStackThroughCardStackUnitTest=function(b){var d=new Criteria();var a=d.getNewCriterion("CardPeer::id",119);a.addOr(d.getNewCriterion("CardPeer::id",1004));d.add(a);CardPeer.doSelectJoinStackThroughCardStack(d,function(e){dbug.log("Retrieved "+e.getLength()+" cards");dbug.log(e);e.each(function(f){display("oo.. Card ..oo\n"+f.getDbug());f.getStacks().each(function(g){display("oo.. CardStack ..oo\n"+g.getDbug())})});b.success("doSelectCardJoinWithStackThroughCardStackUnitTest")})};var doSelectJoinAllUnitTest=function(a){dbug.log("doSelectJoinAllUnitTest");var b=new Criteria();b.setLimit(10);b.addDescendingOrderByColumn("CardPeer::id");CardPeer.doSelectJoinAll(b,function(d){d.each(function(e){display(e.getDbug())});if(d.getLength()>0){a.success("doSelectJoinAllUnitTest")}else{a.failure("doSelectJoinAllUnitTest")}},null,["CardScore"])};var doSelectOneJoinAllUnitTest=function(a){dbug.log("doSelectOneJoinAllUnitTest");var b=new Criteria();b.add("CardPeer::kanji","ç›´");CardPeer.doSelectOneJoinAll(b,function(d){display(d.getDbug());if(d!=null){a.success("doSelectOneJoinAllUnitTest")}else{a.failure("doSelectOneJoinAllUnitTest")}},null,["CardScore"])};var retrieveByPkIdJoinAllUnitTest=function(a){dbug.log("retreiveByPkIdJoinAllUnitTest");var b=new Criteria();CardPeer.retrieveByPkIdJoinAll("1331",function(d){display(d.getDbug());if(d!=null){a.success("retrieveByPkIdJoinAllUnitTest")}else{a.failure("retrieveByPkIdJoinAllUnitTest")}},null,["CardScore"])};var retrieveByPkIdUnitTest=function(a){dbug.log("retreiveByPkIdUnitTest");var b=new Criteria();CardPeer.retrieveByPkId("1331",function(d){display(d.getDbug());if(d!=null){a.success("retrieveByPkIdUnitTest")}else{a.failure("retrieveByPkIdUnitTest")}})};var doSelectJoinAllExceptUnitTest=function(a){var b=new Criteria();b.add("CardPeer::id",119);CardPeer.doSelectJoinAllExcept(b,function(d){d.each(function(e){display(e.getDbug())})},["CardScore","Stack"]);a.next()};var doSelectJoinAllExceptBetaUnitTest=function(a){var b=new Criteria();b.add("CardPeer::id",119);CardPeer.doSelectJoinAll(b,function(d){d.each(function(e){display(e.getDbug())})},null,["CardScore","Stack"]);a.next()};var doSelectJoinUnitTest=function(b){var d=new Criteria();var a=d.getNewCriterion("CardPeer::id",119);a.addOr(d.getNewCriterion("CardPeer::id",1004));d.add(a);CardPeer.doSelectJoinCardCompound(d,function(e){dbug.log("Retrieved "+e.getLength()+" cards");dbug.log(e);e.each(function(f){display("oo.. Card ..oo\n"+f.getDbug());f.getCardCompounds().each(function(g){display("oo.. CardCompound ..oo\n"+g.getDbug())})});b.success("doSelectJoinTestUnit")})};var doSelectJoinThroughUnitTest=function(b){var d=new Criteria();var a=d.getNewCriterion("CardPeer::id",119);a.addOr(d.getNewCriterion("CardPeer::id",1004));d.add(a);CardPeer.doSelectJoinCompoundThroughCardCompound(d,function(e){dbug.log("Retrieved "+e.getLength()+" cards");dbug.log(e);e.each(function(f){display("oo.. Card ..oo\n"+f.getDbug());f.getCompounds().each(function(g){display("oo.. CardCompound ..oo\n"+g.getDbug())})});b.success("doSelectJoinTestUnit")})};var dumbJoinTestUnit=function(a){a.next();return;if(requestParams.has("stack")){crit=new Criteria();crit.add("StackPeer::name",requestParams.get("stack"));StackPeer.doSelectOne(crit,function(b){display(b.getDbug());b.getCardStacks(function(e){display("Stack contains: "+e.length+" cards");if(e.length<=0){a.failure("dumbJoinTestUnit");return}var d=0;e.each(function(f){f.getCard(function(g){d++;display(g.getDbug());if(d>=e.length){dbug.log("finished retrieval of all cards from card_stack");a.next()}})})})})}else{throw ("Can't execute dumbJoinTestUnit without a stack argument");a.next()}};var leftJoinTestUnit=function(a){a.next()};var selectJoinTestUnit=function(a){a.next()};var limitTestUnit=function(a){display("limitTestUnit\n");crit=new Criteria();crit.add("CardPeer::level",3);crit.setLimit(2);CardPeer.doSelect(crit,function(b){if(b.length!=2){a.failure("limitTestUnit")}a.success("limitTestUnit")})};var findCardsByStackTestUnit=function(d){dbug.log("stackTestUnit:");if(requestParams.has("stack")){var a=requestParams.get("stack");var b=false;crit=new Criteria();crit.add("StackPeer::name",a);CardPeer.doSelectJoinStackThroughCardStack(crit,function(e){display("Retrieved "+e.length+" cards");e.each(function(f){display(f.getDbug());f.getStacks().each(function(g){if(g.getName()!=a){b=true}})});if(b){d.failure("findbyStackTestUnit")}else{d.success("findbyStackTestUnit")}d.next()},function(f){dbug.log("error:");dbug.log(f)})}else{throw ("Can't execute findByStackTestUnit without a stack argument");d.next()}};var findCardsByKanjiTestUnit=function(b){if(requestParams.has("kanji")){var a=false;var d=requestParams.get("kanji");var e=new Criteria();e.add("CardPeer::kanji",d);CardPeer.doSelect(e,function(f){display("Retrieved "+f.length+" cards");f.each(function(g){display(g.getDbug());if(g.getKanji()!=d){a=true}});if(a){b.failure("findCardByKanjiTestUnit")}else{b.success("findCardbyKanjiTestUnit")}})}else{throw ("Can't execute findCardByKanjiTestUnit without kanji request parameter");b.next()}};var findCardsByLevelTestUnit=function(b){if(requestParams.has("level")){var a=false;var e=requestParams.get("level");var d=new Criteria();d.add("CardPeer::level",e);c.setLimit(20);CardPeer.doSelect(d,function(f){display("Retrieved "+f.length+" cards");f.each(function(g){if(g.getLevel()!=e){a=true}});if(a){b.failure("findCardByLevelTestUnit")}else{b.success("findCardbyLevelTestUnit")}})}else{throw ("Can't execute findCardByLevelTestUnit without level request parameter");b.next()}};var findCompoundsByLevelTestUnit=function(b){if(requestParams.has("level")){var a=false;var e=requestParams.get("level");var d=new Criteria();d.add("CompoundPeer::level",e);c.setLimit(20);CompoundPeer.doSelect(d,function(f){display("Retrieved "+f.length+" compounds");f.each(function(g){if(g.getLevel()!=e){a=true}});if(a){b.failure("findCompoundByLevelTestUnit")}else{b.success("findCompoundbyLevelTestUnit")}})}else{throw ("Can't execute findCompoundByLevelTestUnit without level request parameter");b.next()}};var criterionTestUnit1=function(a){console.log("criterion TestUnit1");var b=new Criteria();crit=b.getNewCriterion("CardPeer::id","233");crit.addOr(b.getNewCriterion("CardPeer::id","231"));b.add(crit);b.add("CardPeer::meaning","shit");dbug.log("crit: "+crit.getDbug());dbug.log("c: "+b.getSelectSQL()+"["+b.getValues()+"]");a.next()};var criterionTestUnit2=function(a){console.log("Test 2");var b=new Criteria();crit1=b.getNewCriterion("CardPeer::meaning","junk");crit2=b.getNewCriterion("CardPeer::id",[23,43,67],CritConstants.IN);crit1.addOr(crit2);b.add(crit1);dbug.log("crit: "+crit1.getDbug());dbug.log("c: "+b.getSelectSQL()+"["+b.getValues()+"]");a.next()};var criterionTestUnit3=function(a){console.log("Test 3");var b=new Criteria();b.addOr("CardPeer::hatsuon","ã‚¯ãƒƒã‚½");b.addOr("CardPeer::meaning","shit");dbug.log("c: "+b.getSelectSQL()+"["+b.getValues()+"]");a.next()};var criterionTestUnit4=function(b){console.log("Testing Insert");var a=new Card();a.setHatsuon("eeeee");a.setMeaning("wahaaaa");var d=new Criteria();d.add("CardPeer::hatsuon",a.getHatsuon());d.add("CardPeer::meaning",a.getMeaning());dbug.log("c: "+d.getInsertSQL()+"["+d.getValues()+"]");b.next()};var criterionTestUnit5=function(d){console.log("Testing Update");var b=new Card();b.setHatsuon("eeeee");b.setMeaning("wahaaaa");var e=new Criteria();e.add("CardPeer::hatsuon",b.getHatsuon());e.add("CardPeer::meaning",b.getMeaning());var a=new Criteria();a.add("CardPeer::id",232);dbug.log("c: "+e.getUpdateSQL(a)+"["+e.getValues()+"]");d.next()};var criterionTestUnit6=function(a){console.log("Testing Delete");var b=new Criteria();b.add("CardPeer::meaning","bitch");b.addAscendingOrderByColumn("CardPeer::id");CardPeer.doSelectOne(b,function(d){display("\n!!..!!\nDeleting a card\n"+d.getDbug());dbug.log("removing a card:"+d.getId());d.remove(function(){dbug.log("deleted")},function(){dbug.log("not deleted")})});a.next()};var createNewCardTestUnit=function(b){var a=new Card();a.setHatsuon("bbbbbbb");display(a.getDbug());b.next()};var saveTestUnit=function(b){console.log("saveTestUnit");var a=new Card();a.setMeaning("bitch");display("...00oo00...\nSaving a card\n"+a.getDbug()+"\n");a.save(function(d){display("\n...ooOOoo...\nSaved a card!\n"+a.getDbug());if($type(a.getId())=="number"&&a.getId()>0){b.success("saveTestUnit")}else{b.failure("saveTestUnit")}},function(d){display("\n...ooOOoo.. \nFailed to save the card\n");dbug.log("save failed!",d);b.failure("saveTestUnit")})};var updateTestUnit=function(a){console.log("Testing update");var b=new Criteria();b.add("CardPeer::meaning","bitch");CardPeer.doSelectOne(b,function(d){display("Updating card:\n"+d.getDbug());d.setMeaning("big bitch");d.save(function(e){display("Updated card:\n"+d.getDbug());if(d.getMeaning()=="big bitch"){a.success("updateTestUnit")}else{a.failure("updateTestUnit")}},function(e){dbug.log("save failed!",e);a.failure("updateTestUnit")})})};var updateAllTestUnit=function(a){var b=new Criteria();b.add("CardPeer::updated_at",new Date().toString());CardPeer.executeSQL(b.getUpdateSQL(new Criteria()),b.getValues(),function(){dbug.log("success!");a.success("updateAllTestUnit")},function(d){dbug.log("failure: "+d);a.failure("updateAllTestUnit")});dbug.log(stmt)};var nothingSpecialTestUnit=function(a){console.log("NothingSpecial");var b=new NothingSpecial();b.setName("Sad Sack");b.save(function(){dbug.log("saved!");a.success("nothingSpecialTestUnit")},function(d){dbug.log("failed! "+d);a.failure("nothingSpecialTestUnit")})};